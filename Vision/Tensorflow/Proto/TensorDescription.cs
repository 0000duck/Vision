// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensor_description.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Vision.Tensorflow.Proto {

  /// <summary>Holder for reflection information generated from tensor_description.proto</summary>
  public static partial class TensorDescriptionReflection {

    #region Descriptor
    /// <summary>File descriptor for tensor_description.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TensorDescriptionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chh0ZW5zb3JfZGVzY3JpcHRpb24ucHJvdG8SCnRlbnNvcmZsb3caC3R5cGVz",
            "LnByb3RvGhJ0ZW5zb3Jfc2hhcGUucHJvdG8aHGFsbG9jYXRpb25fZGVzY3Jp",
            "cHRpb24ucHJvdG8iqAEKEVRlbnNvckRlc2NyaXB0aW9uEiMKBWR0eXBlGAEg",
            "ASgOMhQudGVuc29yZmxvdy5EYXRhVHlwZRIrCgVzaGFwZRgCIAEoCzIcLnRl",
            "bnNvcmZsb3cuVGVuc29yU2hhcGVQcm90bxJBChZhbGxvY2F0aW9uX2Rlc2Ny",
            "aXB0aW9uGAQgASgLMiEudGVuc29yZmxvdy5BbGxvY2F0aW9uRGVzY3JpcHRp",
            "b25COAoYb3JnLnRlbnNvcmZsb3cuZnJhbWV3b3JrQhdUZW5zb3JEZXNjcmlw",
            "dGlvblByb3Rvc1AB+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Vision.Tensorflow.Proto.TypesReflection.Descriptor, global::Vision.Tensorflow.Proto.TensorShapeReflection.Descriptor, global::Vision.Tensorflow.Proto.AllocationDescriptionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Vision.Tensorflow.Proto.TensorDescription), global::Vision.Tensorflow.Proto.TensorDescription.Parser, new[]{ "Dtype", "Shape", "AllocationDescription" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TensorDescription : pb::IMessage<TensorDescription> {
    private static readonly pb::MessageParser<TensorDescription> _parser = new pb::MessageParser<TensorDescription>(() => new TensorDescription());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TensorDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vision.Tensorflow.Proto.TensorDescriptionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorDescription(TensorDescription other) : this() {
      dtype_ = other.dtype_;
      Shape = other.shape_ != null ? other.Shape.Clone() : null;
      AllocationDescription = other.allocationDescription_ != null ? other.AllocationDescription.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorDescription Clone() {
      return new TensorDescription(this);
    }

    /// <summary>Field number for the "dtype" field.</summary>
    public const int DtypeFieldNumber = 1;
    private global::Vision.Tensorflow.Proto.DataType dtype_ = 0;
    /// <summary>
    /// Data type of tensor elements
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vision.Tensorflow.Proto.DataType Dtype {
      get { return dtype_; }
      set {
        dtype_ = value;
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private global::Vision.Tensorflow.Proto.TensorShapeProto shape_;
    /// <summary>
    /// Shape of the tensor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vision.Tensorflow.Proto.TensorShapeProto Shape {
      get { return shape_; }
      set {
        shape_ = value;
      }
    }

    /// <summary>Field number for the "allocation_description" field.</summary>
    public const int AllocationDescriptionFieldNumber = 4;
    private global::Vision.Tensorflow.Proto.AllocationDescription allocationDescription_;
    /// <summary>
    /// Information about the size and allocator used for the data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vision.Tensorflow.Proto.AllocationDescription AllocationDescription {
      get { return allocationDescription_; }
      set {
        allocationDescription_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TensorDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TensorDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dtype != other.Dtype) return false;
      if (!object.Equals(Shape, other.Shape)) return false;
      if (!object.Equals(AllocationDescription, other.AllocationDescription)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dtype != 0) hash ^= Dtype.GetHashCode();
      if (shape_ != null) hash ^= Shape.GetHashCode();
      if (allocationDescription_ != null) hash ^= AllocationDescription.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dtype != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Dtype);
      }
      if (shape_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Shape);
      }
      if (allocationDescription_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AllocationDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dtype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dtype);
      }
      if (shape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shape);
      }
      if (allocationDescription_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocationDescription);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TensorDescription other) {
      if (other == null) {
        return;
      }
      if (other.Dtype != 0) {
        Dtype = other.Dtype;
      }
      if (other.shape_ != null) {
        if (shape_ == null) {
          shape_ = new global::Vision.Tensorflow.Proto.TensorShapeProto();
        }
        Shape.MergeFrom(other.Shape);
      }
      if (other.allocationDescription_ != null) {
        if (allocationDescription_ == null) {
          allocationDescription_ = new global::Vision.Tensorflow.Proto.AllocationDescription();
        }
        AllocationDescription.MergeFrom(other.AllocationDescription);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            dtype_ = (global::Vision.Tensorflow.Proto.DataType) input.ReadEnum();
            break;
          }
          case 18: {
            if (shape_ == null) {
              shape_ = new global::Vision.Tensorflow.Proto.TensorShapeProto();
            }
            input.ReadMessage(shape_);
            break;
          }
          case 34: {
            if (allocationDescription_ == null) {
              allocationDescription_ = new global::Vision.Tensorflow.Proto.AllocationDescription();
            }
            input.ReadMessage(allocationDescription_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
